<?xml version="1.0"?>
<launch>

	<!-- arguments -->
	<arg name="domain_path" default="$(find assignment_2)/pddl/domain.pddl" />
	<arg name="problem_path" default="$(find assignment_2)/pddl/problem.pddl" />
	<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase"
		respawn="false"
		output="screen">
		<param name="domain_path" value="$(arg domain_path)" />
		<param name="problem_path" value="$(arg problem_path)" />
		<!-- conditional planning flags -->
		<param name="use_unknowns" value="false" />
	</node>

	<!-- problem generation -->
	<include file="$(find rosplan_planning_system)/launch/includes/problem_interface.launch">
		<arg name="knowledge_base" value="rosplan_knowledge_base" />
		<arg name="domain_path" value="$(arg domain_path)" />
		<arg name="problem_path" value="$(find assignment_2)/pddl/generated_problem.pddl" />
		<arg name="problem_topic" value="problem_instance" />
	</include>


	<!-- plan generation -->
	<include file="$(find rosplan_planning_system)/launch/includes/planner_interface.launch">
		<arg name="use_problem_topic" value="true" />
		<arg name="problem_topic" value="/rosplan_problem_interface/problem_instance" />
		<arg name="planner_topic" value="planner_output" />
		<arg name="domain_path" value="$(arg domain_path)" />
		<arg name="data_path" value="$(find assignment_2)/pddl" />
		<arg name="planner_command"
			value="timeout 10 $(find rosplan_planning_system)/common/bin/popf DOMAIN PROBLEM" />
	</include>


	<!-- plan conversion to ROS message-->
	<node name="rosplan_parsing_interface" pkg="rosplan_planning_system"
		type="pddl_simple_plan_parser" respawn="false" output="screen">
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="planner_topic" value="/rosplan_planner_interface/planner_output" />
		<param name="plan_topic" value="complete_plan" />
	</node>


	<!--implementation
	of a ROS action client -->
	<node name="rosplan_plan_dispatcher" pkg="rosplan_planning_system"
		type="pddl_simple_plan_dispatcher" respawn="false" output="screen">
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="plan_topic" value="/rosplan_parsing_interface/complete_plan" />
		<param name="action_dispatch_topic" value="action_dispatch" />
		<param name="action_feedback_topic" value="action_feedback" />
	</node>


	<!-- <arg name="node_start_delay" default="2.0" />
	<node pkg="rosservice" type="rosservice" name="rosservice_problem"
		args="call wait /rosplan_problem_interface/problem_generation_server"/>
	
	<node pkg="rosservice" type="rosservice" name="rosservice_plan"
		args="call wait /rosplan_planner_interface/planning_server"
		launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "/>
	
	<node pkg="rosservice" type="rosservice" name="rosservice_parse"
		args="call wait /rosplan_parsing_interface/parse_plan"
		launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "/>
	
	<node pkg="rosservice" type="rosservice" name="rosservice_action"
		args="call wait /rosplan_plan_dispatcher/dispatch_plan"
		launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "/> -->

	<node name="goto_interface" pkg="assignment_2" type="goto_interface"
		respawn="false" output="screen">
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="pddl_action_name" value="goto" />
		<param name="action_dispatch_topic" value="/rosplan_plan_dispatcher/action_dispatch" />
		<param name="action_feedback_topic" value="/rosplan_plan_dispatcher/action_feedback" />
	</node>

	<node name="search_interface" pkg="assignment_2" type="search_interface"
		respawn="false" output="screen">
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="pddl_action_name" value="search" />
		<param name="action_dispatch_topic" value="/rosplan_plan_dispatcher/action_dispatch" />
		<param name="action_feedback_topic" value="/rosplan_plan_dispatcher/action_feedback" />
	</node>

	<node name="gohome_interface" pkg="assignment_2" type="go-home_interface"
		respawn="false" output="screen">
		<param name="knowledge_base" value="rosplan_knowledge_base" />
		<param name="pddl_action_name" value="go-home" />
		<param name="action_dispatch_topic" value="/rosplan_plan_dispatcher/action_dispatch" />
		<param name="action_feedback_topic" value="/rosplan_plan_dispatcher/action_feedback" />
	</node>

</launch>